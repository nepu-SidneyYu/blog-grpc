syntax = "proto3";

package proto;

option go_package = "proto/blog;proto";

import "google/protobuf/empty.proto";

message UserLoginRequest {
    string username = 1;
    string password = 2;
}

message UserUsePhoneLoginRequest {
    string phone = 1;
    string password = 2;
}
message UserUsePhoneLoginResponse{
    int32 code = 1;
    string msg = 2;
    UserInfo data = 3;
}

message UserUseEmailLoginRequest {
    string email = 1;
    string password = 2;
}
message UserUseEmailLoginResponse{
    int32 code = 1;
    string msg = 2;
    UserInfo data = 3;
}

message UserLoginResponse{
    int32 code = 1;
    string msg = 2;
    UserInfo data = 4;
}
message UserInfo{
    int32 id = 1;
    int64 create_at = 2;
    int64 update_at = 3;
    string email = 4;
    string nickname = 5;
    string avatar = 6;
    string intro = 7;
    string website = 8;
    repeated string articles_like_set = 9;
    repeated string comments_like_set = 10;
    string token = 11;
} 

message UserRegisterRequest{
    string phone = 1;
    string password = 2;
    string code = 3;
}

message EmptyResponse{
    int32 code = 1;
    string msg = 2;
    google.protobuf.Empty data = 3;
}

message UserNameExistRequest {
    string username = 1;
}
message UserNameExistResponse{
    int32 code = 1;
    string msg = 2;
    UserNameExistInfo data = 3;
}
message UserNameExistInfo{
    bool exist = 1;
}

message BindEmailRequest{
    string email = 1;
    string code = 2;
    string phone = 3;
}

message SendCodeRequest{
    string email = 1;
}

message SendPhoneCodeRequest{
    string phone = 1;
}
message SetUserNameRequest{
    string username = 1;
    string phone=2;
}

//存储user到布隆过滤器


service User{
    rpc UserLogin(UserLoginRequest) returns (UserLoginResponse){}
    rpc UserUsePhoneLogin(UserUsePhoneLoginRequest) returns (UserLoginResponse){}
    rpc UserUseEmailLogin(UserUseEmailLoginRequest) returns (UserLoginResponse){}
    rpc SetUserName(SetUserNameRequest) returns (EmptyResponse){}
    rpc UserRegister(UserRegisterRequest) returns (EmptyResponse){}
    rpc UserNameExist(UserNameExistRequest) returns (UserNameExistResponse){}
    rpc BindEmail(BindEmailRequest) returns (EmptyResponse){}
    rpc SendEmailCode(SendCodeRequest) returns (EmptyResponse){}
    rpc SendPhoneCode(SendPhoneCodeRequest) returns (EmptyResponse){}
}

message CreateSessionRequest{
    int32 userId = 1;
}
message CreateSessionResponse{
    int32 code = 1;
    string msg = 2;
    SessionInfo data = 3;
}
message SessionInfo{
    string sessionId = 1;
    string sessionName = 2;
}
message DeleteSessionRequest {
    string sessionId = 1;
}
message DeleteSessionResponse{
    int32 code = 1;
    string msg = 2;
    google.protobuf.Empty data = 3;
}

message  ChatRequest{
    string sessionId = 1;
    string content = 2;
}

message ChatResponse{
    int32 code = 1;
    string msg = 2;
    string content = 3;
}
message GetChatHistoryRequest{
    string sessionId = 1;
}
message GetChatHistoryResponse {
    int32 code = 1;
    string msg = 2;
    repeated ChatHistoryInfo data = 3; 
}
message ChatHistoryInfo {
    string question = 1;
    string answer = 2;
}


service Chat{
    rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse){}
    rpc DeleteSession(DeleteSessionRequest) returns (DeleteSessionResponse){}
    rpc Chat(ChatRequest) returns (stream ChatResponse){}
    rpc GetChatHistory(GetChatHistoryRequest) returns (GetChatHistoryResponse){}
}

